C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN .\Output\mian.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE Code\mian.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Include) DEFINE
                    -(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\mian.lst) OBJECT(.\Output\mian.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "SFR_Macro.h"
   4          #include "Function_define.h"
   5          #include "Common.h"
   6          #include "Delay.h"
   7          
   8          void setTenLedLevel(void);
   9          
  10          #define RF_MODE         0
  11          #define CK_MODE         1
  12          
  13          #define BUZZER_MODE     0
  14          #define MOTOR_MODE      1
  15          
  16          #define ON                      1
  17          #define OFF                     0
  18          
  19          /*      LED IO define   */
  20          #define RF_SET_LED              P00_PushPull_Mode;P00 = 1;
  21          #define RF_CLR_LED              P00_PushPull_Mode;P00 = 0;
  22          
  23          #define CK_SET_LED              P01_PushPull_Mode;P01 = 1;
  24          #define CK_CLR_LED              P01_PushPull_Mode;P01 = 0;
  25          
  26          /*      KEY     IO      define  */
  27          #define MODE_SWITCH_KEY_INIT    P06_Quasi_Mode;P06 = 1;
  28          #define GET_MODE_SWITCH_KEY             P06
  29          
  30          #define SIX_LED_KEY_INIT                P05_Quasi_Mode;P05 = 1;
  31          
  32          
  33          #define KEY_LONG_PRESS                  400             
  34          
  35          
  36          #define MOTOR_SET_RUN   P10_PushPull_Mode;P10 = 0;
  37          #define MOTOR_CLR_RUN   P10_PushPull_Mode;P10 = 1;
  38          
  39          #define BUZZER_SET_RUN  P12_PushPull_Mode;P12 = 1;
  40          #define BUZZER_CLR_RUN  P12_PushPull_Mode;P12 = 0;
  41          
  42          #define CK_INPUT_INIT   P30_Input_Mode;
  43          #define GET_CK                  P30
  44          
  45          #define RF_ADC_INPUT_INIT       Enable_ADC_AIN2;
  46          
  47          
  48          /*      bits define             */
  49          bit is_5ms_Flag;
  50          bit RF_CK_MODE;
  51          bit RF_CK_ISLONGPRESS;
  52          bit MOTOR_BUZZER_MODE;
  53          bit SIX_LED_ON_OFF;
  54          bit SIX_LED_ISLONGPRESS;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 2   

  55          bit isSIX_LED_ENTER_FLASH_MODE;
  56          bit Buzzer_Motor_isRun;
  57          /*              system          */
  58          unsigned int systime_cnt;
  59          /*              key                     */
  60          unsigned int RF_CK_KEY_debounce;
  61          unsigned char SIX_LED_KEY_debounce;
  62          
  63          /*              six led pwm level               */
  64          unsigned char   SIX_LED_Freq;
  65          unsigned char   SIX_LED_display_time;
  66          unsigned char   SIX_LED_Cycle;
  67          unsigned char   SIX_LED_KEY_LONG_PRESS_CNT;
  68          
  69          unsigned char RF_CK_LED_Level;
  70          unsigned char RF_CK_LED_display_step;
  71          
  72          unsigned char RF_CK_RUN_CNT;
  73          unsigned char RF_Level;
  74          
  75          unsigned char RF_Level_add_cnt;
  76          unsigned char RF_Level_del_cnt;
  77          /*                      Timer 5ms                       */
  78          /*********************************************************************************************************
             -***
  79          *    TIMER 0 interrupt subroutine
  80          **********************************************************************************************************
             -**/
  81          #define TH0_INIT        (65536-6667)/256 //5.0ms@XTAL=12MHz, Period = (10.85/2) ms@XTAL=22.1184MHz
  82          #define TL0_INIT        (65536-6667)%256
  83          #define TH1_INIT        (65536-267)/256 //2.5ms@XTAL=12MHz, Period = (5.425/2) ms@XTAL=22.1184MHz
  84          #define TL1_INIT        (65536-267)%256
  85          
  86          void Timer0_ISR (void) interrupt 1          //interrupt address is 0x000B
  87          {
  88   1          TH0 = TH0_INIT;
  89   1          TL0 = TL0_INIT;
  90   1              is_5ms_Flag = 1;
  91   1              systime_cnt++;
  92   1      }
  93          
  94          void Timer0_Init(void)
  95          {
  96   1              TIMER0_MODE1_ENABLE;                        //Timer 0  mode configuration
  97   1          
  98   1              clr_T0M;
  99   1          
 100   1              TH0 = TH0_INIT;
 101   1              TL0 = TL0_INIT;
 102   1          
 103   1              set_ET0;                                    //enable Timer0 interrupt
 104   1              set_EA;                                     //enable interrupts
 105   1              
 106   1              set_TR0;                                    //Timer0 run
 107   1      }
 108          
 109          void Timer1_ISR (void) interrupt 3
 110          {
 111   1              TH1 = TH1_INIT;
 112   1          TL1 = TL1_INIT;
 113   1              setTenLedLevel();
 114   1      }
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 3   

 115          
 116          void Timer1_Init(void)
 117          {
 118   1              //for 1ms interrupt
 119   1              TIMER1_MODE1_ENABLE;                        //Timer 0  mode configuration
 120   1          
 121   1              clr_T1M;
 122   1          
 123   1              TH1 = TH1_INIT;
 124   1              TL1 = TL1_INIT;
 125   1          
 126   1              set_ET1;                                    //enable Timer0 interrupt
 127   1              set_EA;                                     //enable interrupts
 128   1              
 129   1              set_TR1;                                    //Timer0 run        
 130   1      }
 131          
 132          /*              battery power           */
 133          float  Bandgap_Voltage,VDD_Voltage;                     //please always use "double" mode for this
 134          int ADCsumH=0, ADCsumL=0;
 135          
 136          void get_battery_power(void)
 137          {
 138   1                      float bgvalue;
 139   1                      unsigned int i;
 140   1              
 141   1                      UINT8 BandgapHigh,BandgapLow,BandgapMark;
 142   1                      float Bandgap_Value,Bandgap_Voltage_Temp;
 143   1              
 144   1                      set_IAPEN;
 145   1                      IAPCN = READ_UID;
 146   1                      IAPAL = 0x0d;
 147   1                      IAPAH = 0x00;
 148   1                      set_IAPGO;
 149   1                      BandgapLow = IAPFD;
 150   1                      BandgapMark = BandgapLow&0xF0;
 151   1                              
 152   1                      if (BandgapMark==0x80)
 153   1                      {
 154   2                                      BandgapLow = BandgapLow&0x0F;
 155   2                                      IAPAL = 0x0C;
 156   2                                      IAPAH = 0x00;
 157   2                                      set_IAPGO;
 158   2                                      BandgapHigh = IAPFD;
 159   2                                      Bandgap_Value = (BandgapHigh<<4)+BandgapLow;
 160   2                                      Bandgap_Voltage_Temp = Bandgap_Value*3/4;
 161   2                                      Bandgap_Voltage = Bandgap_Voltage_Temp - 33;                    //the actually banggap voltage value is similar this va
             -lue.
 162   2                      }
 163   1                      if (BandgapMark==0x00)
 164   1                      {
 165   2                                      BandgapLow = BandgapLow&0x0F;
 166   2                                      IAPAL = 0x0C;
 167   2                                      IAPAH = 0x00;
 168   2                                      set_IAPGO;
 169   2                                      BandgapHigh = IAPFD;
 170   2                                      Bandgap_Value = (BandgapHigh<<4)+BandgapLow;
 171   2                                      Bandgap_Voltage= Bandgap_Value*3/4;
 172   2                      }
 173   1                      if (BandgapMark==0x90)
 174   1                      {
 175   2                                      IAPAL = 0x0E;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 4   

 176   2                                      IAPAH = 0x00;
 177   2                                      set_IAPGO;
 178   2                                      BandgapHigh = IAPFD;
 179   2                                      IAPAL = 0x0F;
 180   2                                      IAPAH = 0x00;
 181   2                                      set_IAPGO;
 182   2                                      BandgapLow = IAPFD;
 183   2                                      BandgapLow = BandgapLow&0x0F;
 184   2                                      Bandgap_Value = (BandgapHigh<<4)+BandgapLow;
 185   2                                      Bandgap_Voltage= Bandgap_Value*3/4;
 186   2                      }
 187   1                      clr_IAPEN;
 188   1                      Enable_ADC_BandGap;
 189   1                      ADCsumH = 0;
 190   1                      ADCsumL = 0;
 191   1                      CKDIV = 0x02;                                                                                                                   // IMPORTANT!! Modify system clock to 4MHz ,then add the ADC sampling clock 
             -base to add the sampling timing.
 192   1                      for(i=0;i<5;i++)                                                                                                        // All following ADC detect timing is 200uS run under 4MHz.
 193   1                      {
 194   2                              clr_ADCF;
 195   2                              set_ADCS;
 196   2                              while(ADCF == 0);
 197   2                              if (i >= 2)
 198   2                              {
 199   3                                      ADCsumH += ADCRH;
 200   3                                      ADCsumL += ADCRL;
 201   3                              }
 202   2                      }               
 203   1                      CKDIV = 0x00;                                                                                                                   // After ADC sampling, modify system clock back to 16MHz to run next code.
 204   1                              
 205   1                      ADCsumH = ADCsumH/3;
 206   1                      ADCsumL = ADCsumL/3;
 207   1                      bgvalue = (ADCsumH<<4) + ADCsumL;
 208   1                      VDD_Voltage = (0x1000/bgvalue)*Bandgap_Voltage;
 209   1      }
 210          
 211          
 212          /*                              KEY                             */
 213          unsigned char get_RF_CK_Key(void)
 214          {
 215   1              unsigned char keystatus;
 216   1              keystatus = 0;
 217   1              if (P06 == 0)
 218   1              {
 219   2                      RF_CK_KEY_debounce++;
 220   2                      if (RF_CK_KEY_debounce > KEY_LONG_PRESS)
 221   2                      {
 222   3                              RF_CK_KEY_debounce = KEY_LONG_PRESS;
 223   3                              if (RF_CK_ISLONGPRESS == 0)
 224   3                              {
 225   4                                      RF_CK_ISLONGPRESS = 1;
 226   4                                      keystatus = 0x02;
 227   4                              }
 228   3                      }
 229   2              }
 230   1              else
 231   1              {
 232   2                      if (RF_CK_ISLONGPRESS == 0)
 233   2                      {
 234   3                              if (RF_CK_KEY_debounce > 20)
 235   3                              {
 236   4                                      keystatus = 1;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 5   

 237   4                              }
 238   3                      }
 239   2                      RF_CK_KEY_debounce = 0;
 240   2                      RF_CK_ISLONGPRESS = 0;
 241   2              }
 242   1              return keystatus;
 243   1      }
 244          
 245          
 246          unsigned char get_SIX_LED_Key(void)
 247          {
 248   1              unsigned char keystatus;
 249   1              keystatus = 0;
 250   1              if (P05 == 0)
 251   1              {
 252   2                      SIX_LED_KEY_debounce++;
 253   2                      if (SIX_LED_KEY_debounce > SIX_LED_KEY_LONG_PRESS_CNT)
 254   2                      {
 255   3                              SIX_LED_KEY_debounce = 0;
 256   3                              SIX_LED_ISLONGPRESS = 1;
 257   3                              keystatus = 0x02;
 258   3                      }
 259   2              }
 260   1              else
 261   1              {
 262   2                      if (SIX_LED_ISLONGPRESS == 0)
 263   2                      {
 264   3                              if (SIX_LED_KEY_debounce > 20)
 265   3                                      keystatus = 1;
 266   3                      }
 267   2                      else if (SIX_LED_ISLONGPRESS)
 268   2                      {
 269   3                              keystatus = 4;
 270   3                      }
 271   2                      SIX_LED_ISLONGPRESS = 0;
 272   2                      SIX_LED_KEY_debounce = 0;
 273   2              }
 274   1              return keystatus;
 275   1      }
 276          
 277          /*                              SIX LED                 */
 278          void PWM_ISR (void) interrupt 13
 279          {
 280   1          clr_PWMF;               // clear PWM interrupt flag
 281   1      }
 282          
 283          void setSixLedFreq(unsigned char freq,unsigned char duty)
 284          {
 285   1              unsigned int freqtemp;
 286   1              if (duty == 0)
 287   1              {
 288   2                      //turn off six led
 289   2                      //disable pwm P1.1
 290   2                      PWM1_P11_OUTPUT_DISABLE;
 291   2                      clr_PWMRUN;
 292   2                      P11_PushPull_Mode;
 293   2                      P11 = 0;
 294   2              }
 295   1              else if (duty == 100)
 296   1              {
 297   2                      //turn on six led
 298   2                      //disable pwm P1.1
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 6   

 299   2                      PWM1_P11_OUTPUT_DISABLE;
 300   2                      clr_PWMRUN;
 301   2                      P11_PushPull_Mode;
 302   2                      P11 = 1;
 303   2              }
 304   1              else if (duty == 50)
 305   1              {
 306   2                      if (freq > 10)
 307   2                              freq = 10;
 308   2                      if (freq & 0x01)
 309   2                      {
 310   3                              freq -= 1;
 311   3                      }
 312   2                      /*      set freqs       */
 313   2                      if (freq == 10)         //10HZ
 314   2                      {
 315   3                              freqtemp = 0x3080;
 316   3                      }
 317   2                      else if (freq == 8)     //7HZ
 318   2                      {
 319   3                              freqtemp = 0x45C0;
 320   3                      }
 321   2                      else if (freq == 6)     //5HZ
 322   2                      {
 323   3                              freqtemp = 0x6180;
 324   3                      }
 325   2                      else if (freq == 4)     //3HZ
 326   2                      {
 327   3                              freqtemp = 0xA200;
 328   3                      }
 329   2                      else if (freq == 2)     //2HZ
 330   2                      {
 331   3                              freqtemp = 0xF400;
 332   3                      }
 333   2                      else
 334   2                              return;
 335   2                      //turn on with pwm
 336   2                      //enbale pwm P1.1
 337   2                      PWM1_P11_OUTPUT_ENABLE;
 338   2      
 339   2      //              PWM_IMDEPENDENT_MODE;
 340   2                      
 341   2      //              PWM_INT_PWM2;
 342   2      //              PWM_FALLING_INT;
 343   2                      
 344   2                      PWM_CLOCK_FSYS;
 345   2                      PWM_CLOCK_DIV_128;
 346   2                      PWMPH = freqtemp>>8;
 347   2                      PWMPL = freqtemp&0xFF;
 348   2                      set_SFRPAGE;
 349   2                      freqtemp = freqtemp>>1;
 350   2                      freqtemp = freqtemp + 1;
 351   2                      PWM1H = freqtemp>>8;
 352   2                      PWM1L = freqtemp&0xFF;
 353   2                      clr_SFRPAGE;
 354   2                      //-------- PWM start run--------------
 355   2                      set_LOAD;
 356   2                      set_PWMRUN;                     
 357   2              }
 358   1      }
 359          
 360          
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 7   

 361          /*                              TEN     LED                     */
 362          
 363          void RF_CK_LED_LEVEL1(unsigned char step)
 364          {
 365   1                      #if 1   // 1
 366   1      //              P17_Quasi_Mode;
 367   1      //              P15_Quasi_Mode;
 368   1      //              P14_Quasi_Mode;
 369   1      //              P13_Quasi_Mode;
 370   1                      if (step == 4)
 371   1                      {
 372   2                              P17_Input_Mode;
 373   2                              P17 = 1;
 374   2                              P15_Input_Mode;
 375   2                              P15 = 1;
 376   2                              P14_Input_Mode;
 377   2                              P14 = 1;
 378   2                              P13_Input_Mode;
 379   2                              P13 = 1;
 380   2                      }
 381   1                      else if (step == 1)
 382   1                      {
 383   2                              P17_Input_Mode;
 384   2                              P17 = 1;
 385   2                              P15_Input_Mode;
 386   2                              P15 = 1;
 387   2                              P14_Input_Mode;
 388   2                              P14 = 1;
 389   2                              P13_Input_Mode;
 390   2                              P13 = 1;
 391   2                      }
 392   1                      else if (step == 2)
 393   1                      {
 394   2                              P17_Input_Mode;
 395   2                              P17 = 1;
 396   2                              P15_Input_Mode;
 397   2                              P15 = 1;
 398   2                              P14_Input_Mode;
 399   2                              P14 = 1;
 400   2                              P13_Input_Mode;
 401   2                              P13 = 1;
 402   2                      }
 403   1                      else if (step == 3)
 404   1                      {
 405   2                              P15_PushPull_Mode;
 406   2                              P15 = 1;
 407   2                              P14_Input_Mode;
 408   2                              P14 = 1;
 409   2                              P13_Input_Mode;
 410   2                              P13 = 1; 
 411   2                              P17_PushPull_Mode;
 412   2                              P17 = 0;
 413   2                      }
 414   1                      
 415   1                      #endif
 416   1      }
 417          void RF_CK_LED_LEVEL2(unsigned char step)
 418          {
 419   1                      #if 1   // 2
 420   1                              
 421   1      //                      P17_Quasi_Mode;
 422   1      //                      P15_Quasi_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 8   

 423   1      //                      P14_Quasi_Mode;
 424   1      //                      P13_Quasi_Mode;
 425   1                      if (step == 4)
 426   1                      {
 427   2                              P17_PushPull_Mode;
 428   2                              P17 = 1;
 429   2                              P15_PushPull_Mode;
 430   2                              P15 = 1;
 431   2                              P14_PushPull_Mode;
 432   2                              P14 = 1;
 433   2                              P13_PushPull_Mode;
 434   2                              P13 = 1;
 435   2                      }
 436   1                      else if (step == 1)
 437   1                      {
 438   2                              P17_PushPull_Mode;
 439   2                              P17 = 1;
 440   2                              P15_PushPull_Mode;
 441   2                              P15 = 1;
 442   2                              P14_Input_Mode;
 443   2                              P14 = 1;
 444   2                              P13_Input_Mode;
 445   2                              P13 = 1;
 446   2                      }
 447   1                      else if (step == 2)
 448   1                      {
 449   2                              P17_Input_Mode;
 450   2                              P17 = 1;
 451   2                              P15_PushPull_Mode;
 452   2                              P15 = 1;
 453   2                              P14_Input_Mode;
 454   2                              P14 = 1;
 455   2                              P13_Input_Mode;
 456   2                              P13 = 1;
 457   2                      }
 458   1                      else if (step == 3)
 459   1                      {
 460   2                              P17_PushPull_Mode;
 461   2                              P17 = 0;
 462   2                              P15_PushPull_Mode;
 463   2                              P15 = 1;
 464   2                              P14_PushPull_Mode;
 465   2                              P14 = 1;
 466   2                              P13_Input_Mode;
 467   2                              P13 = 1;
 468   2                      }
 469   1                      #endif
 470   1      }
 471          void RF_CK_LED_LEVEL3(unsigned char step)
 472          {
 473   1                      #if 1   //3
 474   1      
 475   1                      if (step == 4)
 476   1                      {
 477   2                              P17_PushPull_Mode;
 478   2                              P17 = 1;
 479   2                              P15_PushPull_Mode;
 480   2                              P15 = 1;
 481   2                              P14_PushPull_Mode;
 482   2                              P14 = 1;
 483   2                              P13_PushPull_Mode;
 484   2                              P13 = 1;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 9   

 485   2                      }
 486   1                      else if (step == 1)
 487   1                      {
 488   2                              P17_PushPull_Mode;
 489   2                              P17 = 1;
 490   2                              P15_PushPull_Mode;
 491   2                              P15 = 1;
 492   2                              P14_Input_Mode;
 493   2                              P14 = 1;
 494   2                              P13_Input_Mode;
 495   2                              P13 = 1;
 496   2                      }
 497   1                      else if (step == 2)
 498   1                      {
 499   2                              P17_Input_Mode;
 500   2                              P17 = 1;
 501   2                              P15_PushPull_Mode;
 502   2                              P15 = 1;
 503   2                              P14_Input_Mode;
 504   2                              P14 = 1;
 505   2                              P13_Input_Mode;
 506   2                              P13 = 1;
 507   2                      }
 508   1                      else if (step == 3)
 509   1                      {
 510   2                              P17_PushPull_Mode;
 511   2                              P17 = 0;
 512   2                              P15_PushPull_Mode;
 513   2                              P15 = 1;
 514   2                              P14_PushPull_Mode;
 515   2                              P14 = 1;
 516   2                              P13_PushPull_Mode;
 517   2                              P13 = 1;
 518   2                      }
 519   1                      #endif
 520   1      }
 521          void RF_CK_LED_LEVEL4(unsigned char step)
 522          {
 523   1                      #if 0   //4
                              if (step == 4)
                              {
                                      P17_Input_Mode;
                                      P15_Quasi_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 1;
                                      P17_PushPull_Mode;
                                      P17 = 0;
                                      P14_PushPull_Mode;
                                      
                                      P15 = 1;
                                      P14 = 1;
                                      P13_PushPull_Mode;
                                      P13 = 1;
                                      P15_PushPull_Mode;
                              }
                              else if (step == 1)
                              {
                                      P17 = 1;
                                      P14 = 1;
                                      P17_Input_Mode;
                                      P15_Input_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 10  

                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 2;
                                      P17_PushPull_Mode;
                                      P17 = 1;
                                      P15_PushPull_Mode;
                                      P15 = 0;
                                      P14_Input_Mode;
                                      P14 = 0;
                                      P13_Input_Mode;
                                      P13 = 0;
                              }
                              else if (step == 2)
                              {
                                      P17_Input_Mode;
                                      P15_Input_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 3;
                                      P17_Input_Mode;
                                      P17 = 0;
                                      P15_Input_Mode;
                                      P15 = 0;
                                      P14_Input_Mode;
                                      P14 = 0;
                                      P13_Input_Mode;
                                      P13 = 0;
                              }
                              else if (step == 3)
                              {
              //                      P17_Quasi_Mode;
              //                      P15_Quasi_Mode;
              //                      P14_Quasi_Mode;
              //                      P13_Quasi_Mode;
              //                      step = 0;
              //                      P17_Input_Mode;
              //                      P17 = 0;
              //                      P15_Input_Mode;
              //                      P15 = 0;
              //                      P14_Input_Mode;
              //                      P14 = 0;
              //                      P13_Input_Mode;
              //                      P13 = 0;
                              }
                              #endif
 592   1                      #if 1   //4
 593   1      
 594   1                      if (step == 4)
 595   1                      {
 596   2                              P17_PushPull_Mode;
 597   2                              P17 = 1;
 598   2                              P15_PushPull_Mode;
 599   2                              P15 = 1;
 600   2                              P14_PushPull_Mode;
 601   2                              P14 = 1;
 602   2                              P13_PushPull_Mode;
 603   2                              P13 = 1;
 604   2                      }
 605   1                      else if (step == 1)
 606   1                      {
 607   2                              P17_PushPull_Mode;
 608   2                              P17 = 1;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 11  

 609   2                              P14_Input_Mode;
 610   2                              P14 = 1;
 611   2                              P13_Input_Mode;
 612   2                              P13 = 1;
 613   2                              P15_PushPull_Mode;
 614   2                              P15 = 0;
 615   2                      }
 616   1                      else if (step == 2)
 617   1                      {
 618   2                              P17_Input_Mode;
 619   2                              P17 = 1;
 620   2                              P15_PushPull_Mode;
 621   2                              P15 = 1;
 622   2                              P14_Input_Mode;
 623   2                              P14 = 1;
 624   2                              P13_Input_Mode;
 625   2                              P13 = 1;
 626   2                      }
 627   1                      else if (step == 3)
 628   1                      {
 629   2                              P17_PushPull_Mode;
 630   2                              P17 = 0;
 631   2                              P15_PushPull_Mode;
 632   2                              P15 = 1;
 633   2                              P14_PushPull_Mode;
 634   2                              P14 = 1;
 635   2                              P13_PushPull_Mode;
 636   2                              P13 = 1;
 637   2                      }
 638   1                      #endif
 639   1                      
 640   1      }
 641          void RF_CK_LED_LEVEL5(unsigned char step)
 642          {
 643   1                      #if 0   //5
                                      
              //                      P17_Quasi_Mode;
              //                      P15_Quasi_Mode;
              //                      P14_Quasi_Mode;
              //                      P13_Quasi_Mode;
                              if (step == 4)
                              {
              //                      P17_Input_Mode;
              //                      P15_Input_Mode;
              //                      P14_Input_Mode;
              //                      P13_Input_Mode;
              //                      step = 1;
              //                      P17_PushPull_Mode;
              //                      P17 = 0;
              //                      P15_PushPull_Mode;
              //                      P14_PushPull_Mode;
              //                      P15 = 1;
              //                      P14 = 1;
              //                      P13_PushPull_Mode;
              //                      P13 = 1;
                                      P17_Input_Mode;
                                      P15_Quasi_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 1;
                                      P17_PushPull_Mode;
                                      P17 = 0;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 12  

                                      P14_PushPull_Mode;
                                      
                                      P15 = 1;
                                      P14 = 1;
                                      P13_PushPull_Mode;
                                      P13 = 1;
                                      P15_PushPull_Mode;
                              }
                              else if (step == 1)
                              {
                                      P17_Input_Mode;
                                      P15_Input_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 2;
                                      P15_PushPull_Mode;
                                      P15 = 0;
                                      P13_Input_Mode;
                                      P13 = 0;
                                      P17_PushPull_Mode;
                                      P14_PushPull_Mode;
                                      P17 = 1;
                                      P14 = 1;
                              }
                              else if (step == 2)
                              {
                                      P17_Input_Mode;
                                      P15_Input_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 3;
                                      P17_PushPull_Mode;
                                      P17 = 0;
                                      P15_PushPull_Mode;
                                      P15 = 0;
                                      P14_PushPull_Mode;
                                      P14 = 0;
                                      P13_PushPull_Mode;
                                      P13 = 0;
                              }
                              else if (step == 3)
                              {
              //                      P17_Input_Mode;
              //                      P15_Input_Mode;
              //                      P14_Input_Mode;
              //                      P13_Input_Mode;
              //                      step = 0;
              //                      P17_PushPull_Mode;
              //                      P17 = 0;
              //                      P15_PushPull_Mode;
              //                      P15 = 0;
              //                      P14_PushPull_Mode;
              //                      P14 = 0;
              //                      P13_PushPull_Mode;
              //                      P13 = 0;
                              }
                              #endif
 728   1                      #if 1   //5
 729   1      
 730   1                      if (step == 4)
 731   1                      {
 732   2                              P17_PushPull_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 13  

 733   2                              P17 = 1;
 734   2                              P15_PushPull_Mode;
 735   2                              P15 = 1;
 736   2                              P14_PushPull_Mode;
 737   2                              P14 = 1;
 738   2                              P13_PushPull_Mode;
 739   2                              P13 = 1;
 740   2                      }
 741   1                      else if (step == 1)
 742   1                      {
 743   2                              P17_PushPull_Mode;
 744   2                              P17 = 1;
 745   2                              P17_PushPull_Mode;
 746   2                              P14 = 1;
 747   2                              P13_Input_Mode;
 748   2                              P13 = 1;
 749   2                              P15_PushPull_Mode;
 750   2                              P15 = 0;
 751   2                      }
 752   1                      else if (step == 2)
 753   1                      {
 754   2                              P17_Input_Mode;
 755   2                              P17 = 1;
 756   2                              P15_PushPull_Mode;
 757   2                              P15 = 1;
 758   2                              P14_Input_Mode;
 759   2                              P14 = 1;
 760   2                              P13_Input_Mode;
 761   2                              P13 = 1;
 762   2                      }
 763   1                      else if (step == 3)
 764   1                      {
 765   2                              P17_PushPull_Mode;
 766   2                              P17 = 0;
 767   2                              P15_PushPull_Mode;
 768   2                              P15 = 1;
 769   2                              P14_PushPull_Mode;
 770   2                              P14 = 1;
 771   2                              P13_PushPull_Mode;
 772   2                              P13 = 1;
 773   2                      }
 774   1                      #endif
 775   1      }
 776          void RF_CK_LED_LEVEL6(unsigned char step)
 777          {
 778   1                      #if 0   // 6
                                      
              //              P17_Quasi_Mode;
              //              P15_Quasi_Mode;
              //              P14_Quasi_Mode;
              //              P13_Quasi_Mode;
                              if (step == 4)
                              {
              //                      P17_Input_Mode;
              //                      P15_Input_Mode;
              //                      P14_Input_Mode;
              //                      P13_Input_Mode;
              //                      step = 1;
              //                      P17_PushPull_Mode;
              //                      P17 = 0;
              //                      P15_PushPull_Mode;
              //                      P14_PushPull_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 14  

              //                      P15 = 1;
              //                      P14 = 1;
              //                      P13_PushPull_Mode;
              //                      P13 = 1;
                                      P17_Input_Mode;
                                      P15_Quasi_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 1;
                                      P17_PushPull_Mode;
                                      P17 = 0;
                                      P14_PushPull_Mode;
                                      
                                      P15 = 1;
                                      P14 = 1;
                                      P13_PushPull_Mode;
                                      P13 = 1;
                                      P15_PushPull_Mode;
                              }
                              else if (step == 1)
                              {
                                      P17 = 1;
                                      P17_Input_Mode;
                                      P15_Input_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 2;
                                      P17_PushPull_Mode;
                                      P17 = 1;
                                      P14_PushPull_Mode;
                                      P14 = 1;
                                      P13_PushPull_Mode;
                                      P13 = 1;
                                      P15_PushPull_Mode;
                                      P15 = 0;
                              }
                              else if (step == 2)
                              {
                                      P17_Input_Mode;
                                      P15_Input_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 3;
                                      P17_PushPull_Mode;
                                      P17 = 0;
                                      P15_PushPull_Mode;
                                      P15 = 0;
                                      P14_PushPull_Mode;
                                      P14 = 0;
                                      P13_PushPull_Mode;
                                      P13 = 0;
                              }
                              else if (step == 3)
                              {
                                      P17_Input_Mode;
                                      P15_Input_Mode;
                                      P14_Input_Mode;
                                      P13_Input_Mode;
                                      step = 0;
                                      P17_PushPull_Mode;
                                      P17 = 0;
                                      P15_PushPull_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 15  

                                      P15 = 0;
                                      P14_PushPull_Mode;
                                      P14 = 0;
                                      P13_PushPull_Mode;
                                      P13 = 0;
                              }
                              #endif
 864   1                      
 865   1                      #if 1   //6
 866   1      
 867   1                      if (step == 4)
 868   1                      {
 869   2                              P17_PushPull_Mode;
 870   2                              P17 = 1;
 871   2                              P15_PushPull_Mode;
 872   2                              P15 = 1;
 873   2                              P14_PushPull_Mode;
 874   2                              P14 = 1;
 875   2                              P13_PushPull_Mode;
 876   2                              P13 = 1;
 877   2                      }
 878   1                      else if (step == 1)
 879   1                      {
 880   2                              P17_PushPull_Mode;
 881   2                              P17 = 1;
 882   2                              P14_PushPull_Mode;
 883   2                              P14 = 1;
 884   2                              P13_PushPull_Mode;
 885   2                              P13 = 1;
 886   2                              P15_PushPull_Mode;
 887   2                              P15 = 0;
 888   2                      }
 889   1                      else if (step == 2)
 890   1                      {
 891   2                              P17_Input_Mode;
 892   2                              P17 = 1;
 893   2                              P15_PushPull_Mode;
 894   2                              P15 = 1;
 895   2                              P14_Input_Mode;
 896   2                              P14 = 1;
 897   2                              P13_Input_Mode;
 898   2                              P13 = 1;
 899   2                      }
 900   1                      else if (step == 3)
 901   1                      {
 902   2                              P17_PushPull_Mode;
 903   2                              P17 = 0;
 904   2                              P15_PushPull_Mode;
 905   2                              P15 = 1;
 906   2                              P14_PushPull_Mode;
 907   2                              P14 = 1;
 908   2                              P13_PushPull_Mode;
 909   2                              P13 = 1;
 910   2                      }
 911   1                      #endif
 912   1      }
 913          void RF_CK_LED_LEVEL7(unsigned char step)
 914          {
 915   1                      #if 1   // 7
 916   1                              
 917   1                              
 918   1                      if (step == 4)
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 16  

 919   1                      {
 920   2                              P17_Input_Mode;
 921   2                              P15_Quasi_Mode;
 922   2                              P14_Input_Mode;
 923   2                              P13_Input_Mode;
 924   2                              step = 1;
 925   2                              P17_PushPull_Mode;
 926   2                              P17 = 0;
 927   2                              P14_PushPull_Mode;
 928   2                              
 929   2                              P15 = 1;
 930   2                              P14 = 1;
 931   2                              P13_PushPull_Mode;
 932   2                              P13 = 1;
 933   2                              P15_PushPull_Mode;
 934   2                      }
 935   1                      else if (step == 1)
 936   1                      {
 937   2                              P17 = 1;
 938   2                              P17_Input_Mode;
 939   2                              P15_Input_Mode;
 940   2                              P14_Input_Mode;
 941   2                              P13_Input_Mode;
 942   2                              P14_Input_Mode;
 943   2                              P14 = 1;
 944   2                              step = 2;
 945   2                              P17_PushPull_Mode;
 946   2                              P17 = 1;
 947   2                              P15_PushPull_Mode;
 948   2                              P15 = 0;
 949   2                              P14_PushPull_Mode;
 950   2                              P14 = 1;
 951   2                              P13_PushPull_Mode;
 952   2                              P13 = 1;
 953   2                      }
 954   1                      else if (step == 2)
 955   1                      {
 956   2                              P15 = 1;
 957   2                              P17_Input_Mode;
 958   2                              P15_Input_Mode;
 959   2                              P14_Quasi_Mode;
 960   2                              P13_Input_Mode;
 961   2      //                      P14_Input_Mode;
 962   2      //                      P14 = 1;
 963   2                              step = 3;
 964   2                              
 965   2                              P15_Input_Mode;
 966   2                              P15 = 0;
 967   2      //                      P14_PushPull_Mode;
 968   2                              P14 = 0;
 969   2                              P13_Input_Mode;
 970   2                              P13 = 0;
 971   2                              P17_PushPull_Mode;
 972   2                              P17 = 1;
 973   2                      }
 974   1                      else if (step == 3)
 975   1                      {
 976   2                              P17 = 0;
 977   2                              P17_Input_Mode;
 978   2                              P15_Input_Mode;
 979   2                              P14_Input_Mode;
 980   2                              P13_Input_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 17  

 981   2                              step = 0;
 982   2                              P17_PushPull_Mode;
 983   2                              P17 = 0;
 984   2                              P15_PushPull_Mode;
 985   2                              P15 = 0;
 986   2                              P14_PushPull_Mode;
 987   2                              P14 = 0;
 988   2                              P13_PushPull_Mode;
 989   2                              P13 = 0;
 990   2                      }
 991   1                      #endif
 992   1                      
 993   1      }
 994          void RF_CK_LED_LEVEL8(unsigned char step)
 995          {
 996   1                      
 997   1                      #if 1   //8
 998   1                              
 999   1                              P17_Input_Mode;
1000   1                              P15_Input_Mode;
1001   1                              P14_Input_Mode;
1002   1                              P13_Input_Mode;
1003   1                      if (step == 4)
1004   1                      {
1005   2                              P17_PushPull_Mode;
1006   2                              P17 = 0;
1007   2                              P15_PushPull_Mode;
1008   2                              P15 = 1;
1009   2                              P14_PushPull_Mode;
1010   2                              P14 = 1;
1011   2                              P13_PushPull_Mode;
1012   2                              P13 = 1;
1013   2                      }
1014   1                      else if (step == 1)
1015   1                      {
1016   2                              P14_Input_Mode;
1017   2                              P14 = 1;
1018   2                              P17_PushPull_Mode;
1019   2                              P17 = 1;
1020   2                              P15_PushPull_Mode;
1021   2                              P15 = 0;
1022   2                              P14_PushPull_Mode;
1023   2                              P14 = 1;
1024   2                              P13_PushPull_Mode;
1025   2                              P13 = 1;
1026   2                      }
1027   1                      else if (step == 2)
1028   1                      {
1029   2                              P14_Input_Mode;
1030   2                              P14 = 1;
1031   2                              P17_PushPull_Mode;
1032   2                              P17 = 1;
1033   2                              P15_Input_Mode;
1034   2                              P15 = 0;
1035   2                              P14_PushPull_Mode;
1036   2                              P14 = 0;
1037   2                              P13_Input_Mode;
1038   2                              P13 = 0;
1039   2                      }
1040   1                      else if (step == 3)
1041   1                      {
1042   2                              P17_Input_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 18  

1043   2                              P17 = 1;
1044   2                              P15_PushPull_Mode;
1045   2                              P15 = 1;
1046   2                              P14_PushPull_Mode;
1047   2                              P14 = 0;
1048   2                              P13_PushPull_Mode;
1049   2                              P13 = 0;
1050   2                      }
1051   1                      #endif
1052   1      }
1053          void RF_CK_LED_LEVEL9(unsigned char step)
1054          {
1055   1              #if 1   //9
1056   1                      
1057   1                              P17_Input_Mode;
1058   1                              P15_Input_Mode;
1059   1                              P14_Input_Mode;
1060   1                              P13_Input_Mode;
1061   1                      if (step == 4)
1062   1                      {
1063   2                              step = 1;
1064   2                              P17_PushPull_Mode;
1065   2                              P17 = 0;
1066   2                              P15_PushPull_Mode;
1067   2                              P15 = 1;
1068   2                              P14_PushPull_Mode;
1069   2                              P14 = 1;
1070   2                              P13_PushPull_Mode;
1071   2                              P13 = 1;
1072   2                      }
1073   1                      else if (step == 1)
1074   1                      {
1075   2                              P14_Input_Mode;
1076   2                              P14 = 1;
1077   2                              step = 2;
1078   2                              P17_PushPull_Mode;
1079   2                              P17 = 1;
1080   2                              P15_PushPull_Mode;
1081   2                              P15 = 0;
1082   2                              P14_PushPull_Mode;
1083   2                              P14 = 1;
1084   2                              P13_PushPull_Mode;
1085   2                              P13 = 1;
1086   2                      }
1087   1                      else if (step == 2)
1088   1                      {
1089   2                              P14_Input_Mode;
1090   2                              P14 = 1;
1091   2                              step = 3;
1092   2                              P17_PushPull_Mode;
1093   2                              P17 = 1;
1094   2                              P15_Input_Mode;
1095   2                              P15 = 0;
1096   2                              P14_PushPull_Mode;
1097   2                              P14 = 0;
1098   2                              P13_Input_Mode;
1099   2                              P13 = 0;
1100   2                      }
1101   1                      else if (step == 3)
1102   1                      {
1103   2                              step = 0;
1104   2                              P17_Input_Mode;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 19  

1105   2                              P17 = 1;
1106   2                              P15_PushPull_Mode;
1107   2                              P15 = 1;
1108   2                              P14_PushPull_Mode;
1109   2                              P14 = 0;
1110   2                              P13_PushPull_Mode;
1111   2                              P13 = 1;
1112   2                      }
1113   1                      #endif
1114   1                      
1115   1      }
1116          void RF_CK_LED_LEVEL10(unsigned char step)
1117          {
1118   1                      #if 1   //10
1119   1                              P17_Quasi_Mode;
1120   1                              P15_Quasi_Mode;
1121   1                              P14_Quasi_Mode;
1122   1                              P13_Quasi_Mode; 
1123   1                      if (step == 4)
1124   1                      {
1125   2                              P17 = 0;                        
1126   2                              P13_PushPull_Mode;
1127   2                              P13 = 0;
1128   2                              P15_Input_Mode;
1129   2                              P15 = 0;
1130   2                              P14_Input_Mode;
1131   2                              P14 = 0;
1132   2                              step = 1;
1133   2                              P17_PushPull_Mode;
1134   2                              P17 = 1;
1135   2                              P15_PushPull_Mode;
1136   2                              P15 = 0;
1137   2                              P14_PushPull_Mode;
1138   2                              P14 = 1;
1139   2                              P13_PushPull_Mode;
1140   2                              P13 = 1;
1141   2                      }
1142   1                      else if (step == 1)
1143   1                      {
1144   2                              P17 = 0;
1145   2                              step = 2;
1146   2                              P17_PushPull_Mode;
1147   2                              P17 = 1;
1148   2                              P15_PushPull_Mode;
1149   2                              P15 = 1;
1150   2                              P14_PushPull_Mode;
1151   2                              P14 = 0;
1152   2                              P13_PushPull_Mode;
1153   2                              P13 = 1;
1154   2                      }
1155   1                      else if (step == 2)
1156   1                      {
1157   2                              step = 3;
1158   2                              P17_PushPull_Mode;
1159   2                              P17 = 1;
1160   2                              P15_PushPull_Mode;
1161   2                              P15 = 1;                        
1162   2                              P14_Input_Mode;
1163   2                              P14 = 1;
1164   2                              P13_PushPull_Mode;
1165   2                              P13 = 0;
1166   2                      }
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 20  

1167   1                      else if (step == 3)
1168   1                      {
1169   2                              step = 0;
1170   2                              P17_PushPull_Mode;
1171   2                              P17 = 0;
1172   2                              P15_PushPull_Mode;
1173   2                              P15 = 1;
1174   2                              P14_PushPull_Mode;
1175   2                              P14 = 1;
1176   2                              P13_PushPull_Mode;
1177   2                              P13 = 1;
1178   2                      }
1179   1                      #endif
1180   1                      
1181   1      }
1182          
1183          void setTenLedLevel(void)
1184          {
1185   1              if (RF_CK_LED_Level == 0)
1186   1              {
1187   2                      P15 = 0;
1188   2                      P14 = 0;
1189   2                      P13 = 0;
1190   2                      P17 = 0;
1191   2              }
1192   1              else if (RF_CK_LED_Level == 1)
1193   1              {
1194   2                      RF_CK_LED_LEVEL1(RF_CK_LED_display_step);
1195   2              }
1196   1              else if (RF_CK_LED_Level == 2)
1197   1              {
1198   2                      RF_CK_LED_LEVEL2(RF_CK_LED_display_step);
1199   2              }
1200   1              else if (RF_CK_LED_Level == 3)
1201   1              {
1202   2                      RF_CK_LED_LEVEL3(RF_CK_LED_display_step);
1203   2              }
1204   1              else if (RF_CK_LED_Level == 4)
1205   1              {
1206   2                      RF_CK_LED_LEVEL4(RF_CK_LED_display_step);
1207   2              }
1208   1              else if (RF_CK_LED_Level == 5)
1209   1              {
1210   2                      RF_CK_LED_LEVEL5(RF_CK_LED_display_step);
1211   2              }
1212   1              else if (RF_CK_LED_Level == 6)
1213   1              {
1214   2                      RF_CK_LED_LEVEL6(RF_CK_LED_display_step);
1215   2              }
1216   1              else if (RF_CK_LED_Level == 7)
1217   1              {
1218   2                      RF_CK_LED_LEVEL7(RF_CK_LED_display_step);
1219   2              }
1220   1              else if (RF_CK_LED_Level == 8)
1221   1              {
1222   2                      RF_CK_LED_LEVEL8(RF_CK_LED_display_step);
1223   2              }
1224   1              else if (RF_CK_LED_Level == 9)
1225   1              {
1226   2                      RF_CK_LED_LEVEL9(RF_CK_LED_display_step);
1227   2              }
1228   1              else if (RF_CK_LED_Level == 10)
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 21  

1229   1              {
1230   2                      RF_CK_LED_LEVEL10(RF_CK_LED_display_step);
1231   2              }
1232   1      
1233   1              RF_CK_LED_display_step++;
1234   1              if (RF_CK_LED_display_step > 4)
1235   1              {
1236   2                      RF_CK_LED_display_step = 1;
1237   2              }
1238   1      }
1239          
1240          /*                              RF Level                */
1241          unsigned char getRFLevel(void)
1242          {
1243   1              float adctemp;
1244   1              CKDIV = 0x04;
1245   1              clr_ADCF;
1246   1              set_ADCS;
1247   1              while(ADCF == 0);
1248   1              CKDIV = 0x00;
1249   1              adctemp = (ADCRH<<4) + ADCRL;
1250   1              adctemp = adctemp/4096.0 * VDD_Voltage;
1251   1              /*if (adctemp > 2380)
1252   1              {
1253   1                      return 24;
1254   1              }
1255   1              else if (adctemp > 2280)
1256   1              {
1257   1                      return 23;
1258   1              }
1259   1              else if (adctemp > 2180)
1260   1              {
1261   1                      return 22;
1262   1              }
1263   1              else if (adctemp > 2080)
1264   1              {
1265   1                      return 21;
1266   1              }
1267   1              else if (adctemp > 1980)
1268   1              {
1269   1                      return 20;
1270   1              }
1271   1              else if (adctemp > 1880)
1272   1              {
1273   1                      return 19;
1274   1              }
1275   1              else if (adctemp > 1780)
1276   1              {
1277   1                      return 18;
1278   1              }
1279   1              else if (adctemp > 1680)
1280   1              {
1281   1                      return 17;
1282   1              }
1283   1              else if (adctemp > 1580)
1284   1              {
1285   1                      return 16;
1286   1              }
1287   1              else if (adctemp > 1480)
1288   1              {
1289   1                      return 15;
1290   1              }       
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 22  

1291   1              else if (adctemp > 1380)
1292   1              {
1293   1                      return 14;
1294   1              }       
1295   1              else if (adctemp > 1280)
1296   1              {
1297   1                      return 13;
1298   1              }       
1299   1              else if (adctemp > 1180)
1300   1              {
1301   1                      return 12;
1302   1              }       
1303   1              else if (adctemp > 1080)
1304   1              {
1305   1                      return 11;
1306   1              }               
1307   1              else*/ if (adctemp > 1200)
1308   1              {
1309   2                      return 10;
1310   2              }
1311   1              else if (adctemp > 1120)
1312   1              {
1313   2                      return 9;
1314   2              }
1315   1              else if (adctemp > 1040)
1316   1              {
1317   2                      return 8;
1318   2              }       
1319   1              else if (adctemp > 920)
1320   1              {
1321   2                      return 7;
1322   2              }       
1323   1              else if (adctemp > 840)
1324   1              {
1325   2                      return 6;
1326   2              }       
1327   1              else if (adctemp > 740)
1328   1              {
1329   2                      return 5;
1330   2              }
1331   1              else if (adctemp > 640)
1332   1              {
1333   2                      return 4;
1334   2              }       
1335   1              else if (adctemp > 540)
1336   1              {
1337   2                      return 3;
1338   2              }       
1339   1              else if (adctemp > 480)
1340   1              {
1341   2                      return 2;
1342   2              }       
1343   1              else if (adctemp > 80)
1344   1              {
1345   2                      return 1;
1346   2              }
1347   1              return 0;
1348   1      }
1349          
1350          void setPWM_BUZZRE(unsigned char status)
1351          {
1352   1              if (status == 0)
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 23  

1353   1              {
1354   2                      PWM0_P12_OUTPUT_DISABLE;
1355   2                      BUZZER_CLR_RUN
1356   2              }
1357   1              else
1358   1              {
1359   2                      PWM0_P12_OUTPUT_ENABLE;
1360   2                      PWM_CLOCK_FSYS;
1361   2                      PWMPH = 0x19;
1362   2                      PWMPL = 0x09;   //2.4K=sys/(pwmph,pwmpl)
1363   2                      set_SFRPAGE;
1364   2                      PWM0H = 0x12;
1365   2                      PWM0L = 0x04;
1366   2                      clr_SFRPAGE;
1367   2                      //-------- PWM start run--------------
1368   2                      set_LOAD;
1369   2                      set_PWMRUN;     
1370   2              }
1371   1      }
1372          
1373          void checkbyself(void)
1374          {
1375   1              RF_CK_LED_Level = 10;
1376   1              RF_CK_LED_display_step = 1;
1377   1              RF_SET_LED
1378   1              CK_SET_LED
1379   1              MOTOR_SET_RUN
1380   1              BUZZER_CLR_RUN
1381   1              P11_PushPull_Mode;
1382   1              P11 = 1;
1383   1      //      setSixLedFreq(1,100);
1384   1              systime_cnt = 0;
1385   1              while(systime_cnt < 100);
1386   1              CK_CLR_LED;
1387   1              MOTOR_CLR_RUN
1388   1              BUZZER_CLR_RUN
1389   1              
1390   1              P11 = 0;
1391   1      //      setSixLedFreq(0,0);
1392   1              RF_CK_LED_Level = 0;
1393   1              RF_CK_LED_display_step = 1;
1394   1      }
1395          
1396          void RF_CK_Process(unsigned char valuetemp)
1397          {
1398   1              if (valuetemp& 0x01)
1399   1              {
1400   2                      /*      short key       */
1401   2                      if (MOTOR_BUZZER_MODE == BUZZER_MODE)
1402   2                      {
1403   3                              MOTOR_BUZZER_MODE = MOTOR_MODE;
1404   3                              if (RF_CK_RUN_CNT > 0)
1405   3                              {
1406   4                                      MOTOR_SET_RUN;
1407   4                                      setPWM_BUZZRE(0);
1408   4      //                                              BUZZER_CLR_RUN;
1409   4                              }
1410   3                      }
1411   2                      else
1412   2                      {
1413   3                              MOTOR_BUZZER_MODE = BUZZER_MODE;
1414   3                              if (RF_CK_RUN_CNT > 0)
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 24  

1415   3                              {
1416   4                                      MOTOR_CLR_RUN;
1417   4                                      setPWM_BUZZRE(1);
1418   4      //                                              BUZZER_SET_RUN;
1419   4                              }
1420   3                      }
1421   2              }
1422   1              else if (valuetemp & 0x02)
1423   1              {
1424   2                      /*      long key        */
1425   2                      if (RF_CK_MODE == RF_MODE)
1426   2                      {
1427   3                              RF_CK_MODE = CK_MODE;
1428   3                              CK_SET_LED;
1429   3                              RF_CLR_LED;
1430   3                      }
1431   2                      else
1432   2                      {
1433   3                              RF_CK_MODE = RF_MODE;
1434   3                              CK_CLR_LED;
1435   3                              RF_SET_LED;
1436   3                      }
1437   2                      RF_Level = 0;
1438   2              }
1439   1      }
1440          
1441          //========================================================================================================
1442          void main(void)
1443          {
1444   1              unsigned char valuetemp;
1445   1          Set_All_GPIO_Quasi_Mode;
1446   1              /*init 5ms timer        */
1447   1              systime_cnt = 0;
1448   1              Timer0_Init();
1449   1              Timer1_Init();  
1450   1              P13_PushPull_Mode;
1451   1              P14_PushPull_Mode;
1452   1              P15_PushPull_Mode;
1453   1              P17_PushPull_Mode;      
1454   1              valuetemp = 0;
1455   1              systime_cnt = 0;
1456   1              get_battery_power();
1457   1              RF_ADC_INPUT_INIT;
1458   1              checkbyself();  
1459   1              MODE_SWITCH_KEY_INIT
1460   1              SIX_LED_KEY_INIT
1461   1              CK_INPUT_INIT
1462   1              RF_CK_MODE = RF_MODE;
1463   1              RF_CK_ISLONGPRESS = 0;
1464   1              MOTOR_BUZZER_MODE = BUZZER_MODE;
1465   1              SIX_LED_ON_OFF = OFF;
1466   1              SIX_LED_ISLONGPRESS = 0;
1467   1              SIX_LED_Freq = 0;
1468   1              isSIX_LED_ENTER_FLASH_MODE = 0;
1469   1              RF_CK_LED_Level = 0;
1470   1              RF_CK_LED_display_step = 1;
1471   1              RF_CK_RUN_CNT = 0;
1472   1              RF_Level = 0;
1473   1              
1474   1              SIX_LED_display_time = 0;
1475   1              SIX_LED_KEY_LONG_PRESS_CNT = 200;
1476   1              RF_Level_add_cnt = 0;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 25  

1477   1              RF_Level_del_cnt = 0;
1478   1          while (1)
1479   1              {
1480   2                      if (is_5ms_Flag)
1481   2                      {
1482   3                              is_5ms_Flag = 0;
1483   3                              //check RF CK MODE KEY
1484   3                              valuetemp = get_RF_CK_Key();
1485   3                              RF_CK_Process(valuetemp);
1486   3                              
1487   3                              valuetemp = get_SIX_LED_Key();
1488   3                              #if 1
1489   3                              /*
1490   3                              0: Normal off
1491   3                              1: Normal on
1492   3                              2: Normal off
1493   3                              0x81: 1HZ flash on;0x91:1HZ flash off
1494   3                              0x82: 2hz flash on;0x92:2HZ flash off
1495   3                              0x83: 3hz flash on;0x93:3HZ flash off
1496   3                              0x85: 5hz flash on;0x95:5HZ flash off
1497   3                              0x87: 7hz flash on;0x97:7HZ flash off
1498   3                              0x8A: 10hz flash on;0x9A:10HZ flash off
1499   3                              */
1500   3                              if (valuetemp == 1)
1501   3                              {
1502   4                                      if (SIX_LED_ON_OFF == OFF)
1503   4                                      {
1504   5                                              SIX_LED_ON_OFF = ON;
1505   5                                              if (SIX_LED_Freq == 0)
1506   5                                              {
1507   6                                                      SIX_LED_Freq = 1;
1508   6                                                      isSIX_LED_ENTER_FLASH_MODE = 0;
1509   6                                              }
1510   5                                              else if (SIX_LED_Freq & 0x80)
1511   5                                              {
1512   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1513   6                                                      isSIX_LED_ENTER_FLASH_MODE = 1;
1514   6                                              }
1515   5                                              P11_PushPull_Mode;
1516   5                                              P11 = 1;
1517   5                                      }
1518   4                                      else
1519   4                                      {
1520   5                                              P11 = 0;
1521   5                                              SIX_LED_ON_OFF = OFF;
1522   5                                              if (SIX_LED_Freq == 1)
1523   5                                              {
1524   6                                                      SIX_LED_Freq = 0;
1525   6                                              }
1526   5                                      }
1527   4                              }
1528   3                              else if (valuetemp == 2)
1529   3                              {
1530   4                                      if (SIX_LED_ON_OFF == ON)
1531   4                                      {
1532   5                                              if (SIX_LED_Freq == 1)
1533   5                                              {
1534   6                                                      SIX_LED_Freq = 0x80;
1535   6      //                                              SIX_LED_ON_OFF = OFF;
1536   6                                                      isSIX_LED_ENTER_FLASH_MODE = 0;
1537   6                                                      P11 = 0;
1538   6                                                      SIX_LED_KEY_LONG_PRESS_CNT = 100;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 26  

1539   6                                              }
1540   5      //                                      else if (SIX_LED_Freq == 0x80)
1541   5      //                                      {
1542   5      //                                              SIX_LED_Freq = 0x81;
1543   5      //                                              SIX_LED_ON_OFF = ON;
1544   5      //                                              isSIX_LED_ENTER_FLASH_MODE = 1;
1545   5      //                                              SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1546   5      //                                              P11 = 1;
1547   5      //                                              SIX_LED_KEY_LONG_PRESS_CNT = 200;
1548   5      //                                      }
1549   5                                              else if ((SIX_LED_Freq & 0x8F) == 0x80)
1550   5                                              {
1551   6                                                      SIX_LED_Freq = 0x82;
1552   6                                                      SIX_LED_ON_OFF = ON;
1553   6                                                      isSIX_LED_ENTER_FLASH_MODE = 1;
1554   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1555   6                                                      P11 = 1;
1556   6                                                      SIX_LED_KEY_LONG_PRESS_CNT = 200;
1557   6                                              }
1558   5                                              else if ((SIX_LED_Freq & 0x8F) == 0x82)
1559   5                                              {
1560   6                                                      SIX_LED_Freq = 0x83;
1561   6                                                      SIX_LED_ON_OFF = ON;
1562   6                                                      isSIX_LED_ENTER_FLASH_MODE = 1;
1563   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1564   6                                                      P11 = 1;
1565   6                                                      SIX_LED_KEY_LONG_PRESS_CNT = 200;
1566   6                                              }
1567   5                                              else if ((SIX_LED_Freq & 0x8F) == 0x83)
1568   5                                              {
1569   6                                                      SIX_LED_Freq = 0x85;
1570   6                                                      SIX_LED_ON_OFF = ON;
1571   6                                                      isSIX_LED_ENTER_FLASH_MODE = 1;
1572   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1573   6                                                      P11 = 1;
1574   6                                                      SIX_LED_KEY_LONG_PRESS_CNT = 200;
1575   6                                              }
1576   5                                              else if ((SIX_LED_Freq & 0x8F) == 0x85)
1577   5                                              {
1578   6                                                      SIX_LED_Freq = 0x87;
1579   6                                                      SIX_LED_ON_OFF = ON;
1580   6                                                      isSIX_LED_ENTER_FLASH_MODE = 1;
1581   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1582   6                                                      P11 = 1;
1583   6                                                      SIX_LED_KEY_LONG_PRESS_CNT = 200;
1584   6                                              }
1585   5                                              else if ((SIX_LED_Freq & 0x8F) == 0x87)
1586   5                                              {
1587   6                                                      SIX_LED_Freq = 0x8A;
1588   6                                                      SIX_LED_ON_OFF = ON;
1589   6                                                      isSIX_LED_ENTER_FLASH_MODE = 1;
1590   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1591   6                                                      P11 = 1;
1592   6                                                      SIX_LED_KEY_LONG_PRESS_CNT = 200;
1593   6                                              }
1594   5                                              else if ((SIX_LED_Freq & 0x8F) == 0x8A)
1595   5                                              {
1596   6                                                      SIX_LED_Freq = 1;
1597   6                                                      SIX_LED_ON_OFF = ON;
1598   6                                                      isSIX_LED_ENTER_FLASH_MODE = 0;
1599   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1600   6                                                      P11 = 1;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 27  

1601   6                                                      SIX_LED_KEY_LONG_PRESS_CNT = 200;
1602   6                                              }
1603   5                                      }
1604   4                              }
1605   3                              else if (valuetemp == 4)
1606   3                              {
1607   4                                      if (SIX_LED_Freq == 0x80)
1608   4                                      {
1609   5                                              SIX_LED_Freq = 0;
1610   5                                              isSIX_LED_ENTER_FLASH_MODE = 0;
1611   5                                              P11 = 0;
1612   5                                              SIX_LED_display_time = 0;
1613   5                                              SIX_LED_ON_OFF = OFF;
1614   5                                      }
1615   4                              }
1616   3                              if (SIX_LED_ON_OFF == ON)
1617   3                              {
1618   4                                      if (isSIX_LED_ENTER_FLASH_MODE == 1)
1619   4                                      {
1620   5                                              if (SIX_LED_display_time > 0)
1621   5                                                      SIX_LED_display_time--;
1622   5                                              if (SIX_LED_display_time == 0)
1623   5                                              {
1624   6                                                      P11^=1;
1625   6                                                      SIX_LED_display_time = 100 / (SIX_LED_Freq & 0x0F);
1626   6                                              }
1627   5                                      }
1628   4                                      else
1629   4                                      {
1630   5                                      }
1631   4                              }
1632   3                              #endif
1633   3                              #if 0
                                      if (valuetemp & 0x01)
                                      {
                                              // six led turn on or turn off
                                              if (SIX_LED_ON_OFF == OFF)
                                              {
                                                      SIX_LED_ON_OFF = ON;
                                                      if (SIX_LED_Freq < 2)
                                                      {
                                                              SIX_LED_Freq = 0;
                                                              setSixLedFreq(0,100);
                                                              isSIX_LED_ENTER_FLASH_MODE = 0;
                                                      }
                                                      else
                                                      {
                                                              setSixLedFreq(SIX_LED_Freq,50);
                                                              isSIX_LED_ENTER_FLASH_MODE = 1;
                                                      }
                                              }
                                              else
                                              {
                                                      SIX_LED_ON_OFF = OFF;
                                                      isSIX_LED_ENTER_FLASH_MODE = 0;
                                                      setSixLedFreq(0,0);
                                              }
                                      }
                                      else if (valuetemp & 0x02)
                                      {
                                              /*      long press:change freq level    */
                                              if (SIX_LED_ON_OFF == ON)
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 28  

                                              {
                                                      isSIX_LED_ENTER_FLASH_MODE = 1;
                                                      if (SIX_LED_Freq == 0)  //1HZ turn on
                                                      {
                                                              setSixLedFreq(0,100);
                                                      }
                                                      else if (SIX_LED_Freq == 1)
                                                      {
                                                              setSixLedFreq(0,0);
                                                      }
                                                      else if (SIX_LED_Freq >=2)
                                                      {
                                                              setSixLedFreq(SIX_LED_Freq,50);
                                                      }
                                                      SIX_LED_Freq += 1;
                                                      if (SIX_LED_Freq > 12)
                                                      {
                                                              SIX_LED_Freq = 0;
                                                              SIX_LED_ON_OFF = OFF;
                                                              setSixLedFreq(0,100);
                                                      }
                                              }
                                              else
                                              {
                                                      if (isSIX_LED_ENTER_FLASH_MODE == 1)
                                                      {
                                                              SIX_LED_ON_OFF = ON;
                                                              setSixLedFreq(SIX_LED_Freq,100);
                                                      }
                                              }
                                      }
                                      else if (valuetemp & 0x04)
                                      {
                                              //long press release
                                              if (SIX_LED_Freq == 2)
                                              {
                                                      SIX_LED_ON_OFF = OFF;
                                                      SIX_LED_Freq = 0;
                                              }
                                              if (SIX_LED_ON_OFF == OFF)
                                              {
                                                      isSIX_LED_ENTER_FLASH_MODE = 0;
                                              }
                                      }
                                      #endif
1708   3                              
1709   3                              
1710   3                              if (RF_CK_MODE == RF_MODE)
1711   3                              {
1712   4                                      /*              check rf level  */
1713   4                                      valuetemp = getRFLevel();
1714   4      //                              valuetemp = 7;
1715   4                                      if (valuetemp != RF_Level)
1716   4                                      {
1717   5                                              if (valuetemp > RF_Level)
1718   5                                              {
1719   6                                                      RF_Level_add_cnt ++;
1720   6                                                      RF_Level_del_cnt = 0;
1721   6                                                      if (RF_Level_add_cnt > 0)       //2
1722   6                                                      {
1723   7                                                              RF_Level++;
1724   7                                                              RF_Level_add_cnt = 0;
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 29  

1725   7                                                      }
1726   6                                              }
1727   5                                              else if (RF_Level > valuetemp)
1728   5                                              {
1729   6                                                      RF_Level_del_cnt ++;
1730   6                                                      RF_Level_add_cnt = 0;
1731   6                                                      if (RF_Level_del_cnt > 0)       //2
1732   6                                                      {
1733   7                                                              RF_Level--;
1734   7                                                              RF_Level_del_cnt = 0;
1735   7                                                      }
1736   6                                              }
1737   5                                      
1738   5                                      }
1739   4                                      else
1740   4                                      {
1741   5                                              RF_Level_add_cnt = 0;
1742   5                                              RF_Level_del_cnt = 0;
1743   5                                      }
1744   4                              }
1745   3                              else 
1746   3                              {
1747   4                                      /*              check ck level  */
1748   4                                      if (P30 == 1)
1749   4                                      {
1750   5                                              RF_Level = 10;
1751   5                                      }
1752   4                                      else 
1753   4                                              RF_Level = 0;
1754   4                              }
1755   3                              if (RF_CK_LED_Level != RF_Level)
1756   3                              {
1757   4                                      RF_CK_LED_display_step = 1;
1758   4                                      RF_CK_LED_Level = RF_Level;
1759   4                              }
1760   3                              if (RF_Level >= 7)
1761   3                              {
1762   4                                      RF_CK_RUN_CNT = 20;
1763   4                                      if (Buzzer_Motor_isRun == 0)
1764   4                                      {
1765   5                                              if (MOTOR_BUZZER_MODE == BUZZER_MODE)
1766   5                                              {
1767   6                                                      MOTOR_CLR_RUN;
1768   6                                                      setPWM_BUZZRE(1);
1769   6      //                                              BUZZER_SET_RUN;
1770   6                                              }
1771   5                                              else
1772   5                                              {
1773   6                                                      MOTOR_SET_RUN;
1774   6                                                      setPWM_BUZZRE(0);
1775   6      //                                              BUZZER_CLR_RUN;
1776   6                                              }
1777   5                                      }
1778   4                                      Buzzer_Motor_isRun = 1;
1779   4                              }
1780   3                              else
1781   3                              {
1782   4      //                              Buzzer_Motor_isRun = 0;
1783   4                              }
1784   3                              
1785   3                              if (RF_CK_RUN_CNT > 0)
1786   3                              {
C51 COMPILER V9.54   MIAN                                                                  07/07/2019 17:14:39 PAGE 30  

1787   4                                      RF_CK_RUN_CNT -- ;
1788   4                                      if (RF_CK_RUN_CNT == 0)
1789   4                                      {
1790   5                                              MOTOR_CLR_RUN
1791   5                                              setPWM_BUZZRE(0);
1792   5      //                                      BUZZER_CLR_RUN
1793   5                                              Buzzer_Motor_isRun = 0;
1794   5                                      }
1795   4                              }
1796   3                      }
1797   2              }
1798   1      }
1799          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3807    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      8    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
